<section class="container-500 container-centered container-padded">
    <form class="flex flex-column gap-8" id="loginForm">
        
        <div class="flex flex-row-nowrap align-center gap-8 justify-space-between">
            {{#if (eq data.action "login")}}
                <h2>Login</h2>
            {{else}}
                <h2>Register</h2>
            {{/if}}
            
            <p class="assertive" id="loginError">__content__</p>
        </div>

        <input type="email" name="email" placeholder="Email" required/>
        <input type="password" name="password" placeholder="Password" required/>
        
        {{#with data.action}}
            {{#if (eq this "login")}}
                <p>Need an account? <a href="/login?action=register">Register</a></p>
                <input type="submit" value="Login" />
            {{else}}
                <p>Already have an account? <a href="/login?action=login">Login</a></p>
                <input type="submit" value="Register" />
            {{/if}}
        {{/with}}
        
    </form>
</section>

<script>
    const action = renderData?.action || "login";
    const loginError = sleepless.rplc8("#loginError");
    
    sleepless.QS1("#loginForm").addEventListener("submit", async function(event)
    {
        event.preventDefault();
        loginError.clear();
        
        const formData = new FormData(this);
        
        const email = formData.get("email");
        const password = formData.get("password");
        
        const {error, result} = await Server.post(action, {email, password});
        
        if(error)
        {
            console.log(error);
            loginError.update({content: error});
            return;
        }
        
        console.log(result);
    });
</script>